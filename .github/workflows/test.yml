name: test

on: [push, pull_request]

env:
  CHERE_INVOKING: 'yes'
  MSYSTEM: 'UCRT64'
  PERL5LIB: /home/runneradmin/perl5/lib/perl5
  # PERL5LIB: "${{ github.workspace }}/local/lib/perl5"

jobs:
  hunspell:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash --noprofile --norc -e -o pipefail -l {0}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Cache pacman & CPAN Modules
      uses: actions/cache@v4
      with:
        path: |
          C:\msys64\home\runneradmin\perl5
          C:\msys64\var\cache\pacman\pkg
        key: build-dep
    - name: Add MSYS to path
      shell: pwsh
      run: echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Set up Devel::Cover
      env:
        MSYSTEM: 'MSYS'
      run: |
        pacman --noconfirm -S gettext-devel libtool libxcrypt-devel pkgconf automake autoconf make texinfo gcc mingw-w64-ucrt-x86_64-gcc perl-HTML-Parser perl-Capture-Tiny perl-Mozilla-CA perl-IO-Socket-SSL perl-Sub-Exporter-Progressive perl-Test-Deep perl-Module-Runtime perl-Test-Requires perl-Test-Fatal perl-Try-Tiny perl-Test-Needs perl-Text-Diff perl-Test-Pod perl-Pod-Parser perl-Params-Util perl-Moo
        curl -sL http://cpanmin.us | perl - -l ~/perl5 App::cpanminus local::lib
        eval `perl -I ~/perl5/lib/perl5 -Mlocal::lib`
        cpanm install --notest Devel::Cover Devel::Cover::Report::Codecov Pod::Coverage
    - name: Download & unpack
      shell: pwsh
      run: |
        Invoke-WebRequest https://github.com/hunspell/hunspell/archive/refs/heads/master.zip -OutFile master.zip
        Expand-Archive -Path master.zip -DestinationPath .
    - name: Patch
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        cd hunspell-master
        cp -a src src.orig
        perl -MDevel::Cover ../gt2mt.pl
        ~/perl5/bin/cover -report html -report codecov
        cd src/tools
        windmc -u ../messages.mc
        mv messages.h ../../
        perl -pi -e 's/code_page\(1\)/code_page(57004)/' messages.rc
        cp -a ../../../get_message.c ./get_message.cxx
        cat <<'EOT' >> Makefile.am
        hunspell_SOURCES += get_message.cxx
        hunspell_LDADD += messages.o
        messages.o: messages.rc
        	windres -o $@ $<
        EOT
    - name: Update gist
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.gist_token }}
      run: |
        gh gist edit 89edf18c2870ec5471dfe38fe865051d -f hunspell.csv hunspell-master/missing.csv
    - name: Configure
      run: |
        export PATH=/ucrt64/bin:$PATH
        cd hunspell-master
        autoreconf -vfi
        ./configure --disable-nls --with-readline --with-ui --enable-silent-rules
    - name: Build
      run: |
        export PATH=/ucrt64/bin:$PATH
        cd hunspell-master
        make
        make install DESTDIR=/d/a/gt2mt/gt2mt/dist
        cp `ldd src/tools/.libs/hunspell | awk '/\/ucrt64/ {print $3}' | uniq` /d/a/gt2mt/gt2mt/dist/bin/
    - name: List SO imports
      run: |
        ldd dist/bin/hunspell
        ./dist/bin/hunspell --help
    - name: Set French locale
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale fr-FR
    - name: Set French locale again I don't know why
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale fr-FR
    - name: Test with French locale
      run: ./dist/bin/hunspell --help 2>&1 | iconv -f ISO-8859-1 -t utf-8

    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hunspell
        path: dist/
    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hunspell-coverage
        path: hunspell-master/cover_db
    
  msmtp:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash --noprofile --norc -e -o pipefail -l {0}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    - name: Cache pacman & CPAN Modules
      uses: actions/cache@v4
      with:
        path: |
          C:\msys64\home\runneradmin\perl5
          C:\msys64\var\cache\pacman\pkg
        key: build-dep
    - name: Add MSYS to path
      shell: pwsh
      run: |
        # echo "C:\msys64\ucrt64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Set up Devel::Cover
      env:
        MSYSTEM: 'MSYS'
      run: |
        pacman --noconfirm -S libxcrypt-devel pkgconf automake autoconf make texinfo gcc mingw-w64-ucrt-x86_64-gcc perl-HTML-Parser perl-Capture-Tiny perl-Mozilla-CA perl-IO-Socket-SSL perl-Sub-Exporter-Progressive perl-Test-Deep perl-Module-Runtime perl-Test-Requires perl-Test-Fatal perl-Try-Tiny perl-Test-Needs perl-Text-Diff perl-Test-Pod perl-Pod-Parser perl-Params-Util perl-Moo
        curl -sL http://cpanmin.us | perl - -l ~/perl5 App::cpanminus local::lib
        eval `perl -I ~/perl5/lib/perl5 -Mlocal::lib`
        cpanm install --notest Devel::Cover Devel::Cover::Report::Codecov
    - name: Download & unpack
      shell: pwsh
      run: |
        Invoke-WebRequest https://github.com/mlt/msmtp/archive/refs/heads/native.zip -OutFile native.zip
        Expand-Archive -Path native.zip -DestinationPath .
    - name: Patch
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        cd msmtp-native
        cp -a src src.orig
        perl -MDevel::Cover ../gt2mt.pl
        ~/perl5/bin/cover -report html -report codecov
        cd src
        windmc -u messages.mc
        perl -pi -e 's/code_page\(1\)/code_page(57004)/' messages.rc
        cp -a ../../get_message.c ./
        cat <<'EOT' >> Makefile.am
        msmtp_SOURCES += get_message.c
        msmtp_LDADD += messages.o
        messages.o: messages.rc
        	windres -o $@ $<
        EOT
    - name: Update gist
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.gist_token }}
      run: |
        gh gist edit 89edf18c2870ec5471dfe38fe865051d -f msmtp.csv msmtp-native/missing.csv
    - name: Configure
      run: |
        export PATH=/ucrt64/bin:$PATH
        cd msmtp-native
        autoreconf -i
        ./configure --with-tls=sspi --with-vault=credman --disable-nls LDFLAGS=-Wl,-Bstatic,-lwinpthread
    - name: Build
      run: |
        export PATH=/ucrt64/bin:$PATH
        cd msmtp-native
        make
        strip --strip-all src/msmtp.exe
    - name: List SO imports
      run: |
        ldd msmtp-native/src/msmtp
        msmtp-native/src/msmtp --version
# It looks like UTF-8 is not enabled system-wide on GitHub Actions
# runner and we are using non-UNICODE enabled code. Therefore we use
# iconv to convert to utf-8 here. The binary should work on your
# system properly either way.
    - name: Set French locale
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale fr-FR
    - name: Set French locale again I don't know why
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale fr-FR
    - name: Test with French locale
      run: msmtp-native/src/msmtp --version | iconv -f ISO-8859-1 -t utf-8

    - name: Set German locale
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale de-DE
    - name: Test with German locale
      run: msmtp-native/src/msmtp --version | iconv -f ISO-8859-15 -t utf-8

    - name: Set Russian locale
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale ru-RU
    - name: Set Russian locale again
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale ru-RU
    - name: Test with Russian locale
      run: msmtp-native/src/msmtp --version | iconv -f cp1251 -t utf-8

    - name: Set Brazilian locale
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale pt-BR
    - name: Test with Portuguese
      run: msmtp-native/src/msmtp --version | iconv -f ISO-8859-1 -t utf-8
    - name: Set Brazilian locale again
      shell: pwsh
      run: Set-WinSystemLocale -SystemLocale pt-BR
    - name: Test with Portuguese
      run: msmtp-native/src/msmtp --version | iconv -f ISO-8859-1 -t utf-8

    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: msmtp
        path: msmtp-native/src/msmtp.exe
    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: msmtp-coverage
        path: msmtp-native/cover_db
